@inject IJSRuntime JsRuntime

<div id="deutschland-karte" class="deutschland-karte">
</div>

@code {
    [Parameter, EditorRequired] public required IEnumerable<Castle> Castles { get; set; }
    [Parameter] public EventCallback<BoundingBox> OnMapViewChange { get; set; }
    private DotNetObjectReference<Deutschlandkarte> _dotNetObjectReference;
    private IJSObjectReference? _module;
    private bool jsLoaded => _module != null;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Object Reference erstellen
            _dotNetObjectReference = DotNetObjectReference.Create(this);

            // JavaScript-Modul laden und cachen
            var module = await GetModule();

            // Kartenmaterial initialisieren
            await module.InvokeVoidAsync("InitMap", _dotNetObjectReference);

            // Marker setzen
            await module.InvokeVoidAsync("CreateMarker", Castles);
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    protected override async Task OnParametersSetAsync()
    {
        if (jsLoaded)
        {
            var module = await GetModule();
            await module.InvokeVoidAsync("CreateMarker", Castles);
            await base.OnParametersSetAsync();
        }
    }

    private async ValueTask<IJSObjectReference> GetModule()
    {
        if (_module == null)
            _module = await JsRuntime.InvokeAsync<IJSObjectReference>
              ("import", "./js/deutschlandkarte.js");
        return _module;
    }

    // Wird aus 'deutschlandkarte.js' aufgerufen, wenn sich die MapView ändert.
    [JSInvokable(nameof(BoundingBoxChanged))]
    public async Task BoundingBoxChanged(double southWest_lat, double southWest_lng, double northEast_lat, double northEast_lng)
    {
        // BoundingBox erstellen
        var boundingBox = new BoundingBox(
            new Location(southWest_lat, southWest_lng),
            new Location(northEast_lat, northEast_lng)
        );

        // EventCallback triggern
        await OnMapViewChange.InvokeAsync(boundingBox);
    }
}
